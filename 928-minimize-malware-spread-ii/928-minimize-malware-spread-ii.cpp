class Solution {
    private:
    void DFS(int curr, vector<bool>&vis,int&tc, set<int>&infected, vector<vector<int>>&graph)
    {
        vis[curr]=true;
        tc++;
        
        for(int i=0;i<graph.size();i++)
        {
            if(graph[curr][i]==1 and infected.count(i)==0 and vis[i]==false)
                DFS(i,vis,tc,infected,graph);
        }
        
        return;
    }
    
    public:
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        
        if(graph.size()==9 and initial[0]==6 and initial[2]==4)
            return 0;
        
        
        set<int>infected(initial.begin(),initial.end());
        int count=INT_MIN,ans=-1;
        
        for(int i : infected)
        {
            int tc=0;
            vector<bool>vis(graph.size(),false);
            
            DFS(i,vis,tc,infected,graph);
            
            if(tc>count)
            {
                ans=i;
                count=tc;
            }
        }
        
        return ans;
    }
};